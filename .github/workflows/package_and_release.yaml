on:
  workflow_call:

name: "[reusable] rust test"
jobs:
  build:
    name: Rust project
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, macos-arm]
        include:
        - build: linux
          os: ubuntu-22.04
          rust: stable
          target: x86_64-unknown-linux-musl
          name: x86_64-linux
        - build: linux-arm
          os: ubuntu-22.04
          rust: stable
          target: aarch64-unknown-linux-musl
          name: aarch64-linux
        - build: macos
          os: macos-12
          rust: stable
          target: x86_64-apple-darwin
          name: x86_64-macos
        # - build: macos-arm
        #   os: macos-12
        #   rust: stable
        #   target: aarch64-apple-darwin
        #   name: aarch64-macos
    steps:
      - uses: actions/checkout@v3
        with:
           fetch-depth: 0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - uses: actions-rs/cargo@v1
        name: Build
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Get latest tag
        if: github.event_name == 'release'
        id: get-latest-tag
        run: |
           echo LATEST_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --max-count=1)) >> $GITHUB_ENV

      - name: Package 
        if: github.event_name == 'release'
        run: |
          make bundle_release TARGET=${{ matrix.target }}

      - uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        name: Upload release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target}}/release/kubesess_${{ matrix.target }}.tar.gz
          asset_name: kubesess_${{ env.LATEST_TAG }}_${{ matrix.target }}.tar.gz
          tag: ${{ env.LATEST_TAG }}
